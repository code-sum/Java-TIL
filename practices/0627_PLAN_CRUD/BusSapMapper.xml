<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.busSap.dao.BusSapDao">

	<!-- 영업계획 목록 조회 -->
	<select id="planlist" resultType="kr.happyjob.study.busSap.model.PlanModel">
		SELECT pl.pln_no
		      ,pl.loginID
		      ,pl.clnt_no
		      ,(SELECT clnt_name FROM tb_clnt WHERE tb_clnt.clnt_no = pl.clnt_no) AS clnt_name
		      ,pl.pln_date
		      ,ll.product_no
		      ,ll.pro_cd
		      ,ll.pro_name
		      ,ll.splr_no
		      ,ll.splr_name
		      ,ll.product_name
		      ,pl.pln_amt
		      ,pl.per_amt
		      ,pl.pln_achv
		      ,pl.pln_memo
		  FROM (
		      SELECT pd.product_no
		            ,pd.product_name
		            ,pr.pro_cd
		            ,pr.pro_name
		            ,sp.splr_no
		            ,sp.splr_name
		        FROM tb_product pd
		          INNER JOIN tb_pro pr ON pd.pro_cd = pr.pro_cd
		          INNER JOIN tb_splr sp ON pd.splr_no = sp.splr_no
		        ) ll
		    INNER JOIN tb_planning pl ON pl.product_no = ll.product_no
		  <where>
		     <if test="currentuserType != 'A'.toString()">
		          and pl.loginID = #{currentLoginID}
		     </if>
		     <if test="(start != null) and (!start.equals(''))  ">
			      and pl.pln_date <![CDATA[>=]]>  STR_TO_DATE(#{start}, '%Y-%m-%d')  
			 </if>
			
			 <if test="(end != null) and (!end.equals(''))">
			      and pl.pln_date <![CDATA[<=]]> STR_TO_DATE(#{end}, '%Y-%m-%d')  
			 </if>
			 <if test="(searchclicombo != null) and (!searchclicombo.equals(''))">
				  and pl.clnt_no = #{searchclicombo}
			 </if>
			 <if test="(searchptypecombo != null) and (!searchptypecombo.equals(''))">
				  and ll.product_no = #{searchptypecombo}
			 </if>
		 </where>
	    ORDER BY pln_date DESC
	    LIMIT #{pageindex}, #{pageSize}
	</select>
	
	
	<!-- 영업계획 목록 카운트 조회 -->
	<select id="countplanlist" resultType="int">
    	SELECT COUNT(*)
		  FROM (
		      SELECT pd.product_no
		            ,pd.product_name
		            ,pr.pro_cd
		            ,pr.pro_name
		            ,sp.splr_no
		            ,sp.splr_name
		        FROM tb_product pd
		          INNER JOIN tb_pro pr ON pd.pro_cd = pr.pro_cd
		          INNER JOIN tb_splr sp ON pd.splr_no = sp.splr_no
		        ) ll
		    INNER JOIN tb_planning pl ON pl.product_no = ll.product_no
		  <where>
		     <if test="currentuserType != 'A'.toString()">
		          and pl.loginID = #{currentLoginID}
		     </if>
		     <if test="(start != null) and (!start.equals(''))  ">
			      and pl.pln_date <![CDATA[>=]]>  STR_TO_DATE(#{start}, '%Y-%m-%d')  
			 </if>
			
			 <if test="(end != null) and (!end.equals(''))">
			      and pl.pln_date <![CDATA[<=]]> STR_TO_DATE(#{end}, '%Y-%m-%d')  
			 </if>
			 <if test="(searchclicombo != null) and (!searchclicombo.equals(''))">
				  and pl.clnt_no = #{searchclicombo}
			 </if>
			 <if test="(searchptypecombo != null) and (!searchptypecombo.equals(''))">
				  and ll.product_no = #{searchptypecombo}
			 </if>
		 </where>
  	</select>
 
	
	<!-- 영업계획 한건 조회 -->
	<select id="planselectone" resultType="kr.happyjob.study.busSap.model.PlanModel">
		SELECT pl.pln_no
		      ,pl.loginID
		      ,pl.clnt_no
		      ,pl.pln_date
		      ,ll.product_no
		      ,ll.product_name
		      ,ll.pro_cd
		      ,ll.pro_name
		      ,ll.splr_no
		      ,ll.splr_name
		      ,pl.pln_amt
		      ,pl.per_amt
		      ,pl.pln_achv
		      ,pl.pln_memo
		  FROM (
		      SELECT pd.product_no
		            ,pd.product_name
		            ,pr.pro_cd
		            ,pr.pro_name
		            ,sp.splr_no
		            ,sp.splr_name
		        FROM tb_product pd
		          INNER JOIN tb_pro pr ON pd.pro_cd = pr.pro_cd
		          INNER JOIN tb_splr sp ON pd.splr_no = sp.splr_no
		        ) ll
		    INNER JOIN tb_planning pl ON pl.product_no = ll.product_no
		 WHERE pl.pln_no =  #{pln_no}
	</select>
	
	
	<!-- 영업계획 등록 -->
	<insert id="planinsert">
		<selectKey resultType="int" keyProperty="no" order="BEFORE">
	        SELECT ifnull(max(pln_no),0) + 1 FROM tb_planning
	    </selectKey>
	    INSERT INTO tb_planning
			    		(
			    		 pln_no
			    		,loginID
			    		,clnt_no
			    		,pln_date
			    		,product_no
			    		,pln_amt
			    		,per_amt
			    		,pln_achv
			    		,pln_memo
			    		 )
	    		VALUES (
	    				 #{no}
	    				,#{loginid}
	    				,#{clicombo}
	    				,now()
	    				,#{ptypecombo}
	    				,#{pln_amt}
	    				,#{per_amt}
	    				,(#{per_amt}/#{pln_amt})*100
	    				,#{pln_memo}
	    				 )
	</insert>
	
	
	<!-- 영업계획 수정 -->
	<update id="planupdate">
		UPDATE tb_planning
		   SET clnt_no = #{clicombo}
			  ,product_no = #{ptypecombo}
			  ,pln_amt = #{pln_amt}
			  ,per_amt = #{per_amt}
			  ,pln_achv = (#{per_amt}/#{pln_amt})*100
			  ,pln_memo = #{pln_memo}
		WHERE pln_no = #{pln_no}
	</update>
	
	
	<!-- 영업계획 삭제 -->
	<delete id="plandelete">
		DELETE FROM tb_planning
		WHERE pln_no = #{pln_no}
	</delete>
	

	
</mapper>